# Generated by Django 5.0 on 2025-09-05 10:54

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("schools", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="FeatureUsage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateField()),
                ("feature_name", models.CharField(max_length=100)),
                ("total_uses", models.IntegerField(default=0)),
                ("unique_users", models.IntegerField(default=0)),
                ("average_time_spent", models.FloatField(default=0)),
                ("success_rate", models.FloatField(default=0)),
                ("average_load_time", models.FloatField(default=0)),
                ("error_rate", models.FloatField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "school",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="schools.school",
                    ),
                ),
            ],
            options={
                "ordering": ["-date"],
                "unique_together": {("date", "school", "feature_name")},
            },
        ),
        migrations.CreateModel(
            name="RevenueAnalytics",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateField()),
                (
                    "daily_revenue",
                    models.DecimalField(decimal_places=2, default=0, max_digits=12),
                ),
                (
                    "monthly_revenue",
                    models.DecimalField(decimal_places=2, default=0, max_digits=12),
                ),
                (
                    "yearly_revenue",
                    models.DecimalField(decimal_places=2, default=0, max_digits=12),
                ),
                ("new_subscriptions", models.IntegerField(default=0)),
                ("canceled_subscriptions", models.IntegerField(default=0)),
                ("upgraded_subscriptions", models.IntegerField(default=0)),
                ("downgraded_subscriptions", models.IntegerField(default=0)),
                ("successful_payments", models.IntegerField(default=0)),
                ("failed_payments", models.IntegerField(default=0)),
                ("refunds", models.IntegerField(default=0)),
                ("chargebacks", models.IntegerField(default=0)),
                (
                    "customer_acquisition_cost",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                (
                    "customer_lifetime_value",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                ("churn_rate", models.FloatField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "school",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="schools.school",
                    ),
                ),
            ],
            options={
                "ordering": ["-date"],
                "unique_together": {("date", "school")},
            },
        ),
        migrations.CreateModel(
            name="TenantHealth",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateField()),
                ("uptime_percentage", models.FloatField(default=100.0)),
                ("average_response_time", models.FloatField(default=0)),
                ("error_rate", models.FloatField(default=0)),
                ("cpu_usage", models.FloatField(default=0)),
                ("memory_usage", models.FloatField(default=0)),
                ("storage_usage", models.FloatField(default=0)),
                ("bandwidth_usage", models.FloatField(default=0)),
                ("database_size", models.FloatField(default=0)),
                ("query_performance", models.FloatField(default=0)),
                ("concurrent_users", models.IntegerField(default=0)),
                ("peak_concurrent_users", models.IntegerField(default=0)),
                ("overall_health_score", models.FloatField(default=100.0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "school",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="health_metrics",
                        to="schools.school",
                    ),
                ),
            ],
            options={
                "ordering": ["-date"],
                "unique_together": {("school", "date")},
            },
        ),
        migrations.CreateModel(
            name="UserEngagement",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateField()),
                ("country", models.CharField(blank=True, max_length=100, null=True)),
                ("state", models.CharField(blank=True, max_length=100, null=True)),
                ("city", models.CharField(blank=True, max_length=100, null=True)),
                ("total_users", models.IntegerField(default=0)),
                ("active_users", models.IntegerField(default=0)),
                ("new_users", models.IntegerField(default=0)),
                ("returning_users", models.IntegerField(default=0)),
                ("total_sessions", models.IntegerField(default=0)),
                ("average_session_duration", models.FloatField(default=0)),
                ("bounce_rate", models.FloatField(default=0)),
                ("page_views", models.IntegerField(default=0)),
                ("unique_page_views", models.IntegerField(default=0)),
                ("actions_performed", models.IntegerField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "school",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="schools.school",
                    ),
                ),
            ],
            options={
                "ordering": ["-date"],
                "unique_together": {("date", "school", "country", "state", "city")},
            },
        ),
    ]
