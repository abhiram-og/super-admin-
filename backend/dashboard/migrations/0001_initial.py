# Generated by Django 5.0 on 2025-09-05 10:54

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("schools", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="PlatformMetrics",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateField(unique=True)),
                ("total_schools", models.IntegerField(default=0)),
                ("active_schools", models.IntegerField(default=0)),
                ("trial_schools", models.IntegerField(default=0)),
                ("suspended_schools", models.IntegerField(default=0)),
                ("total_students", models.IntegerField(default=0)),
                ("total_teachers", models.IntegerField(default=0)),
                ("total_logins", models.IntegerField(default=0)),
                ("total_quiz_attempts", models.IntegerField(default=0)),
                (
                    "total_revenue",
                    models.DecimalField(decimal_places=2, default=0, max_digits=12),
                ),
                (
                    "monthly_recurring_revenue",
                    models.DecimalField(decimal_places=2, default=0, max_digits=12),
                ),
                ("api_requests", models.IntegerField(default=0)),
                ("error_rate", models.FloatField(default=0)),
                ("average_response_time", models.FloatField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "ordering": ["-date"],
            },
        ),
        migrations.CreateModel(
            name="SystemHealth",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "component",
                    models.CharField(
                        choices=[
                            ("database", "Database"),
                            ("api", "API Server"),
                            ("cache", "Cache Server"),
                            ("storage", "File Storage"),
                            ("email", "Email Service"),
                            ("sms", "SMS Service"),
                            ("payment", "Payment Gateway"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("healthy", "Healthy"),
                            ("warning", "Warning"),
                            ("critical", "Critical"),
                            ("down", "Down"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "response_time",
                    models.FloatField(help_text="Response time in milliseconds"),
                ),
                ("uptime_percentage", models.FloatField()),
                ("last_check", models.DateTimeField(auto_now=True)),
                ("error_message", models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="RecentActivity",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "activity_type",
                    models.CharField(
                        choices=[
                            ("school_created", "School Created"),
                            ("school_activated", "School Activated"),
                            ("school_suspended", "School Suspended"),
                            ("integration_enabled", "Integration Enabled"),
                            ("tier_upgraded", "Tier Upgraded"),
                            ("license_renewed", "License Renewed"),
                            ("payment_received", "Payment Received"),
                            ("system_alert", "System Alert"),
                        ],
                        max_length=30,
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("description", models.TextField()),
                ("metadata", models.JSONField(default=dict)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "school",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="schools.school",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="AIQuizPerformance",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateField()),
                ("total_quizzes", models.IntegerField(default=0)),
                ("ai_generated_quizzes", models.IntegerField(default=0)),
                ("manual_quizzes", models.IntegerField(default=0)),
                ("average_score", models.FloatField(default=0)),
                ("completion_rate", models.FloatField(default=0)),
                ("average_time_taken", models.FloatField(default=0)),
                ("ai_accuracy_rate", models.FloatField(default=0)),
                ("ai_generation_time", models.FloatField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "school",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="schools.school",
                    ),
                ),
            ],
            options={
                "ordering": ["-date"],
                "unique_together": {("date", "school")},
            },
        ),
    ]
